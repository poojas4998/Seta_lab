# python - a snakemake file

import os
# load in all sample 
# separate conditions by delimiters

#KO_001_01.gz
#KOangII_001_01.gz

# sep KO and KO_angII 
#rename it KO_angII
#KO_control_001_01.gz
#{genotype}_{treatment}_{sample}_{readpair}.gz 
# consistent naming scheme



SRA_FILES = glob_wildcards("data/{sra}_{frr}_{num}.gz")  								  # these are fastq.gz files

rule all:
	input: 
		expand("{genotype}_{sample}_{readpair}_fastqc.zip", genotype = ["KO","KOangII","WT","WTangII"], sample = ["001","002","003","004","005"], readpair = ["01","02"]),
		expand("{genotype}_{sample}_{readpair}_trimmedreads.gz", genotype = ["KO","KOangII","WT","WTangII"], sample = ["001","002","003","004","005"], readpair = ["01","02"])
		
		
		
		
	#make a csv file , describe your samples (where one column is the condition , other is genoytype (wt/ko)) top f the snake file, is the data from the df
	
	

rule rawFASTQC:
	input:
		rawreads = "{genotype}_{sample}_{readpair}.gz"                       # data/path, {genotype}_{treatment}_{sample}_{readpair}.gz " 
	output:
		zip = "{genotype}_{sample}_{readpair}_fastqc.zip",                    # comma 
		html= "{genotype}_{sample}_{readpair}_fastqc.html"
	threads:
		4                       														  # can it be 40 threads?
	shell:
		"""
		fastqc -t {threads} {input.rawreads} 
		"""
		
rule trimmomatic:
	input: 
	       rawreads = "{genotype}_{sample}_{readpair}.gz"    
	output: 
	       trimmed = "{genotype}_{sample}_{readpair}_trimmedreads.gz"
	threads:
		8
	shell:
		"""
		touch {output.trimmed}
		"""	